graph(%boxes.9 : Float(3000, 4, strides=[4, 1], requires_grad=0, device=cuda:0),
      %offset.13 : Float(3000, 4, strides=[4, 1], requires_grad=0, device=cuda:0)):
  %2 : NoneType = prim::Constant()
  %3 : Float(*, *, requires_grad=0, device=cuda:0) = aten::clone(%offset.13, %2)
  %4 : Float(*, *, requires_grad=0, device=cuda:0) = aten::clone(%boxes.9, %2)
  %5 : bool = prim::Constant[value=0]()
  %6 : Device = prim::Constant[value="cuda"]()
  %7 : float = prim::Constant[value=62.5]()
  %8 : int = prim::Constant[value=0]()
  %9 : int = prim::Constant[value=1]()
  %10 : int = prim::Constant[value=2]()
  %11 : int = prim::Constant[value=3]()
  %12 : float = prim::Constant[value=0.5]()
  %13 : int = prim::Constant[value=4]()
  %14 : float = prim::Constant[value=1.]()
  %15 : Float(*, *, device=cuda:0) = immut::slice(%4, %8, %2, %2, %9)
  %16 : Float(*, device=cuda:0) = immut::select(%15, %9, %8)
  %17 : Float(*, device=cuda:0) = immut::select(%15, %9, %9)
  %18 : Float(*, device=cuda:0) = immut::select(%15, %9, %10)
  %19 : Float(*, device=cuda:0) = immut::select(%15, %9, %11)
  %20 : Float(*, device=cuda:0) = aten::sub(%18, %16, %9)
  %21 : Float(*, device=cuda:0) = aten::add(%20, %9, %9)
  %22 : Float(*, device=cuda:0) = aten::sub(%19, %17, %9)
  %23 : Float(*, device=cuda:0) = aten::add(%22, %9, %9)
  %24 : Float(*, device=cuda:0) = aten::mul(%21, %12)
  %25 : Float(*, device=cuda:0) = aten::add(%16, %24, %9)
  %26 : Float(*, device=cuda:0) = aten::mul(%23, %12)
  %27 : Float(*, device=cuda:0) = aten::add(%17, %26, %9)
  %28 : Float(*, *, device=cuda:0) = immut::slice(%3, %8, %2, %2, %9)
  %29 : Float(*, *, device=cuda:0) = immut::slice(%28, %9, %8, %2, %13)
  %30 : Float(*, *, device=cuda:0) = aten::div(%29, %14)
  %31 : Float(*, *, device=cuda:0) = immut::slice(%28, %9, %9, %2, %13)
  %32 : Float(*, *, device=cuda:0) = aten::div(%31, %14)
  %33 : Float(*, *, device=cuda:0) = immut::slice(%28, %9, %10, %2, %13)
  %34 : Float(*, *, device=cuda:0) = aten::div(%33, %14)
  %35 : Float(*, *, device=cuda:0) = immut::slice(%28, %9, %11, %2, %13)
  %36 : Float(*, *, device=cuda:0) = aten::div(%35, %14)
  %37 : Float(device=cuda) = aten::tensor(%7, %2, %6, %5)
  %38 : Float(device=cuda) = aten::log(%37)
  %39 : Tensor = aten::clamp(%34, %2, %38)
  %40 : Tensor = aten::clamp(%36, %2, %38)
  %41 : FloatTensor(device=cuda:0) = immut::slice(%21, %8, %2, %2, %9)
  %42 : FloatTensor(device=cuda:0) = aten::unsqueeze(%41, %9)
  %43 : FloatTensor(device=cuda:0) = aten::mul(%30, %42)
  %44 : FloatTensor(device=cuda:0) = immut::slice(%25, %8, %2, %2, %9)
  %45 : FloatTensor(device=cuda:0) = aten::unsqueeze(%44, %9)
  %46 : FloatTensor(device=cuda:0) = aten::add(%43, %45, %9)
  %47 : FloatTensor(device=cuda:0) = immut::slice(%23, %8, %2, %2, %9)
  %48 : FloatTensor(device=cuda:0) = aten::unsqueeze(%47, %9)
  %49 : FloatTensor(device=cuda:0) = aten::mul(%32, %48)
  %50 : FloatTensor(device=cuda:0) = immut::slice(%27, %8, %2, %2, %9)
  %51 : FloatTensor(device=cuda:0) = aten::unsqueeze(%50, %9)
  %52 : FloatTensor(device=cuda:0) = aten::add(%49, %51, %9)
  %53 : Tensor = aten::exp(%39)
  %54 : Tensor = aten::mul(%53, %42)
  %55 : Tensor = aten::exp(%40)
  %56 : Tensor = aten::mul(%55, %48)
  %57 : int[] = aten::size(%3)
  %58 : Tensor = aten::new_zeros(%3, %57, %2, %2, %2, %2)
  %59 : Tensor = aten::mul(%54, %12)
  %60 : Tensor(device=cuda:0) = aten::sub(%46, %59, %9)
  %61 : Tensor = immut::slice(%58, %8, %2, %2, %9)
  %62 : Tensor = immut::slice(%61, %9, %8, %2, %13)
  %63 : Tensor = immut::assign(%62, %60, %5)
  %64 : Tensor = immut::slice_rev(%61, %63, %9, %8, %2, %13)
  %65 : Tensor = immut::slice_rev(%58, %64, %8, %2, %2, %9)
  %66 : Tensor = aten::mul(%56, %12)
  %67 : Tensor(device=cuda:0) = aten::sub(%52, %66, %9)
  %68 : Tensor = immut::slice(%65, %8, %2, %2, %9)
  %69 : Tensor = immut::slice(%68, %9, %9, %2, %13)
  %70 : Tensor = immut::assign(%69, %67, %5)
  %71 : Tensor = immut::slice_rev(%68, %70, %9, %9, %2, %13)
  %72 : Tensor = immut::slice_rev(%65, %71, %8, %2, %2, %9)
  %73 : Tensor(device=cuda:0) = aten::add(%46, %59, %9)
  %74 : Tensor = aten::sub(%73, %9, %9)
  %75 : Tensor = immut::slice(%72, %8, %2, %2, %9)
  %76 : Tensor = immut::slice(%75, %9, %10, %2, %13)
  %77 : Tensor = immut::assign(%76, %74, %5)
  %78 : Tensor = immut::slice_rev(%75, %77, %9, %10, %2, %13)
  %79 : Tensor = immut::slice_rev(%72, %78, %8, %2, %2, %9)
  %80 : Tensor(device=cuda:0) = aten::add(%52, %66, %9)
  %81 : Tensor = aten::sub(%80, %9, %9)
  %82 : Tensor = immut::slice(%79, %8, %2, %2, %9)
  %83 : Tensor = immut::slice(%82, %9, %11, %2, %13)
  %84 : Tensor = immut::assign(%83, %81, %5)
  %85 : Tensor = immut::slice_rev(%82, %84, %9, %11, %2, %13)
  %86 : Tensor = immut::slice_rev(%79, %85, %8, %2, %2, %9)
  return (%86)
